<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAUHCMdQV12wilHY8ENFR4bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALD9Oe0xvjv9OcY//OmCF/zhfhv8aLD95AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGyUuN09ui91MbYr/RGB5/1V4mP86YIX/N1yC/zhfhv8tUHDcDhkkNQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFRsgCT5TZp5hhab/WHua/0logf9GY33/V3qZ/0Fmif89Yob/OF2D/zZb
        gf82YIj/HzZNnAoSGwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACo3Q1hkh6XzWnuX/2GEo/9Yepn/UG6I/1t+nv9cgqD/Q2iL/z9m
        iP89YYb/Ol+C/zdbgf81XYP/M1d88hMhL1UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABsjKRxVcIbAYoSf/2eKpv9Sbob/VHKM/12Bnv9ghaT/YIWl/2OI
        p/9HbI7/Q2qL/z9liP88YYX/OWCE/zdbgP80WX7/NV6F/yVCXr4KERoeAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9T117fqbF/158k/9ee5T/aYup/1t6k/9liaf/ao6t/2eM
        qv9liKf/ZImo/0xzlP9IbY//RmuM/0Jniv8+YoX/OWCE/zVaf/8zWH3/Mlh//zVehP8YKDiDAQMEBgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcJCp4IOqyf97n7z/cJKr/2uNqP9vk6//cZW0/2yS
        sP9tkrD/a5Cu/2eMq/9qj63/UXaX/0xxkv9LcJL/RWyO/0Jniv8+Y4X/Ol+C/zZbgf81WX7/Mll+/zRd
        hP8tUHPiAAAAJgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAGB3ihOIrcr/gaXB/3ueuv93m7j/eJ66/3ec
        uf91mrf/c5i1/3CVs/9tk7H/bI+v/2uQrf9WfZ3/U3iZ/01yk/9LcJL/RGmM/0BliP88YYX/O2GE/zdc
        gv82W4D/MVZ8/zZehv8CAwVsAAAAPQAAABgAAAADAAAAAAAAAAAAAAAAiKrFKoerx/+FqMT/gqbC/3+j
        v/9+or7/e5+8/3abuP92m7j/cZa0/3KWtP9wk7H/b5Sy/1uAof9XfJz/VHmZ/01yk/9Kb5D/RWqO/0Fm
        if8/Y4b/PGGF/zZbgP80WX7/Nl6G/wcNEmgAAAA/AAAAJQAAAAcAAAAAAAAAAAAAAACVt9NBi63J/4mr
        x/+FqcX/gqXC/3+ivv99or3/faG9/3ieuf93mrj/c5i1/3KYtP9zmLb/Yoem/16Bov9Zfp7/UneY/05z
        lv9McZP/SG2P/0Noi/8+Y4j/PGGE/zleg/85YIf/DBUdXAAAAA8AAAAEAAAAAAAAAAAAAAAAAAAAAJa5
        01qOsMv/iqzH/4utyP+IqsX/gqfB/4Kkwf+BpL7/fKC9/3ufu/95nbj/d5y4/3ecuf9njKr/YYal/16D
        o/9af5//U3iZ/090lf9McZP/RWqN/0Jniv8/Zon/PWKE/zhfhP8sS2dZAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAmLnUc5Kzzf+Nr8n/i63I/4utyP+GqcT/hKjC/4Snwv+Ao77/f6K+/3ygvP94nLn/eZ26/22S
        sf9ojar/Yoim/12Co/9af5//Vnmb/1F2l/9KcZH/R2yQ/0Vqi/9BZon/O2CE/z9li3AAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACcvNaKlrbQ/5Oyzv+PsMz/j7DL/4yuyf+IqcT/iKrE/4Wmwv+Dpb//fqO9/36g
        vf99ob3/cpez/2yRsP9pjKz/ZImm/12Bof9Zf5//VXqb/090l/9Oc5T/R2yO/0NojP8/ZIf/P2SJiAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ291qKZudL/l7fP/5Kzzf+Qscv/jrHL/42ux/+IqsX/iKrF/4ao
        w/+CpL//gqW+/4Cjv/92mrb/c5a0/2+Usf9ojav/Zoqp/2CFpP9YfZ7/VHma/1J3mP9McZT/SG2P/0Vq
        jf9BZ4uhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn7/Yu5q70v+autP/mLjR/5Ozzf+Ts83/j7HL/4yt
        x/+Mrcf/iqvE/4Wnwf+EpsD/hKfB/3yfuv93nLb/cpi0/2+Usf9rkK3/ZYqn/16Dov9bgKD/VXyc/1F2
        l/9PdJX/SG2P/0ZrjroAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjwNfUn73V/5281f+cu9P/l7jR/5a2
        z/+UtM3/kLDL/5Cwyv+Or8n/iKrE/4mqxP+HqcP/gaS9/36guf95nLf/cpa0/26Usf9qj63/ZImn/2GG
        pf9cgJ//WH2d/1F2l/9Nc5X/Sm6Q0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKPC2OyiwNf/nr3V/569
        1f+cu9P/l7fP/5e1z/+Ts8z/kbHM/4+vyf+Mrsj/iqvF/4usxv+HpsD/gaS8/3yeuv93mrb/dZi1/26T
        sP9ska7/ZImo/2CFpP9bgKH/VXub/1R5mf9OcpPrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApsTa/6PD
        2v+jwdf/ob7X/5++1v+audL/m7rS/5m40f+Wtc3/lLPL/5Gxy/+Nrsf/j6/J/4ysw/+IqMH/g6S8/36g
        uf94m7j/dZm1/3GVsv9qkK7/aI2r/2OIpv9cgaD/WX6e/1N4mP8AAAAAAAAAAAAAAAAAAAAAAAAAAK/M
        4gqsyt//psTa/6fE2v+jwtn/ob/W/5291P+du9L/nrzS/5e2z/+Xts//lbTN/5Cxyv+Sssr/kK7F/4qr
        w/+Gpr//g6W+/32fu/95nLf/dpq1/26TsP9ska//Zoup/2OIp/9cgaH/WH2d/1yCowcAAAAAAAAAAAAA
        AAAAAAAAss/kIa3K3/+px9z/qcfc/6bE2/+nxNj/s8ze/7jO3P+ivtL/m7nR/5m40P+Vtc3/oL7V/6bD
        2f+nxNj/nrzS/4usw/+Hp8D/gqS8/4Ghu/98n7n/dpq0/3KXs/9skq//ao6s/2KHpv9hhaT/X4eoHwAA
        AAAAAAAAAAAAAAAAAAC10uc5r8zg/67M4P+syN7/p8Xc/8re6v/G2OT/x9nk/6K+0/+kw9v/p8bb/63J
        3v+oxNj/psLV/6O/1P+mwdX/p8TZ/6K/1v+Xts7/iKjB/3yfuf95m7b/dZm1/3OXs/9skbD/aY6s/2KH
        pv9kiqs4AAAAAAAAAAAAAAAAAAAAALfU51Ouy+H/sMzg/6vK3v+oxtz/0+Pr/8nb5v/C1+P/tczb/6zE
        1P+lv9H/or7T/6bC1/+jv9T/pcDV/6G91P+fu9H/nLnP/5u4z/+cudD/l7fP/4+xyf+Bo7//d5q1/3GW
        s/9tkq//aI2r/2qPr1EAAAAAAAAAAAAAAAAAAAAAt9TobrHP4/+10uX/utXo/7jU5f+71eX/vNLh/8PX
        5P/J3Of/xtrl/8fb5v+/097/ssfW/6fB0v+eus//nrzR/5u5z/+buM7/k7LK/5a0y/+Qrsb/j67G/46v
        xv+PsMn/hqjD/4Gjvv9vlbD/b5WzbAAAAAAAAAAAAAAAAAAAAAC/3O8+vNXms7bP4OyzzeD/tM7e/7LM
        3v+0zeD/s83e/7HM3f+0zd3/uM/f/8LX4//Q3+n/z97o/8XX4v+wxdX/pL7P/5SxyP+Tssr/kbHI/4qr
        xP+HqMH/h6jC/4Wnv/9/ob3/fqC69Ianwrd9or8+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALvT
        5A230eNIsszdg7LM3Lqwytv2r8nc/6rG2f+kwNX/oLzT/5m4z/+kvtP/s8na/7vQ3v/F2OT/ytrl/7XK
        1/+pwNH/j63D/4anv9WJqcCWh6fAWYamvxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwy94aqcTYU6XB1o6cuM7HlrTM/5Cxyf+LrMb/gKO9/4Sk
        vtGmv9CZxdfiac3d6DK1y9sBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl7fRJ5O0
        zCoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////D////gf///gB///gAH//wAA//wAAD/4AAAP8AAAA+AA
        AADgAAAA4AAAAeAAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAHwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAAD+AAAH//AAf///n////////////8=
</value>
  </data>
</root>