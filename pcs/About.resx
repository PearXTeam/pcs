<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAACAAAAAnAAAAJwAAACcAAAAnAAAAJwAAACcAAAAnAAAAJwAAACcAAAAnAAAAJwAA
        ACcAAAAnAAAAJwAAACcAAAAnAAAAJwAAACcAAAAnAAAAJwAAACcAAAAnAAAAJwAAACcAAAAnAAAAJwAA
        ACUAAAAIAAAAAAICAgo+PT2DmpiY7qGfn/Oko6LzpqSk86Wko/OjoqHzoaCf852cm/OXlZXzkI6O84iG
        hvN+fHzzdXJx82pnZvNhXl7zW1hY81lWVvNcWVjzZmNi829sbPN2dHPzfHl584SCgfOTkZDzo6Kh866s
        rPOxsLDzrq6t8UlJSKcAAAAJICAgNqOhoOzKyMf/zcvL/9bU0//Z2Nf/2tjY/9nX1//W1NP/0s/P/8zK
        yf/LyMf/w8C//7aysv+koKD/j4qK/4J+ff97dnb/eXV0/397ev+Oion/mpaV/6Kenv+qpqb/ure2/8/N
        zP/i4N//6Ofm/+bl5P/n5eT/rayr/gEBASklJSU7n52b6bq4t//Bv77/ysjH/9HPz//V09P/1dPS/9PR
        0f/S0ND/z8zM/46MjP9iYWD/Y2Ji/3x6ev+Xk5P/jIeH/3t2dv98d3f/hYCA/5OPjv+cmZj/pKGh/7Ct
        rf/GxMP/2dfX/+Lg4P/h39//2djX/9PR0P+joaH7AQEBLCMjIjqXlZTos7Cv/7i2tf/DwcD/zMrK/9PR
        0f/X1tX/2NbV/9jW1v91dHT/cXBw/5qYmP+Jh4f/YV9f/0VDQ/9ubGz/joqK/4F8fP+OiYn/nJiY/6Wh
        oP+uqqr/wL28/9fV1f/j4eH/4uHh/9vZ2f/OzMz/xMLB/5WTkvoBAQErIyIiOpSRkOisqKf/sa6t/7q4
        t//FwsL/0M/O/9jW1f/f3d3/sK6u/2NiYf/b2dn/zsvL/8G9vf+1sbH/kY2N/1FNTf9QTk7/kIyM/5uX
        l/+jn5//ramo/7y5uP/T0dD/4+Hh/+Xj4//d3Nv/0M3N/7+8vP+0sbD/i4iH+gEBASskIyM6lZKS6Kil
        pP+ppqX/sK6s/726uf/Jxsb/09HR/+Hf3/+mpaX/dHNz/+He3v/Ny8v/wb6+/7Kurv+inp3/npmZ/3dz
        c/9DQUH/mZaW/7Gtrf+2s7P/z8zM/+Pi4f/n5eX/393c/9DOzf+/vbz/raqq/6mmpf+LiIf6AgICKyUk
        JDqZlpXorKin/6ajov+rqKf/s7Cw/7+8u//Lycj/2tjY/8C/v/9jY2P/4N7d/9TR0f/Jxsb/ura2/6Cc
        nP87OTn/ZmVk/5CMjP9NTEz/rKqp/8vIyP/h39//6efn/+Hf3//Rz87/vbq5/66rqv+opaT/rKmo/46L
        ivoCAgIrJiUlOqCeneixrqz/rKio/6yop/+tqan/s7Cw/7+8u//PzMz/2NbW/19eXv/OzMz/3NrZ/8/M
        zP/Avbz/qqam/0A+Pv9GRET/Y2Ji/56cm/9XVlb/2dfX/+vq6v/i4OD/0M3N/7u4uP+uqqn/q6in/62q
        qf+xrq3/kY6N+gICAisoKCc6p6Wk6Li1tP+0sbD/sa6t/6+sq/+uq6r/tLGw/8C9vf/a2Nj/eXh4/6Kh
        oP/o5uX/1dPS/8XCwv+0sbD/ZGFh/21ra/9fXFz/d3Z2/2loaP+ioqL/7evr/8/MzP+5trX/r6ur/6+s
        q/+vrKv/sK2s/7azsv+VkpH6AgICKykpKTqurKzow8C//726uf+5trb/tbKx/7Owr/+xrq3/tbGx/8bD
        wv+qqKj/ZWVl/+nn5//c2tr/zsvL/7azsv+Pi4r/SUdH/725uP9wbm7/ZmZm/83My//Qzc3/uLSz/7Gt
        rP+yr67/s7Cv/7Oxr/+zsbD/ure2/5iWlfoCAgIrKysqOra0tOjNysr/xsPD/8K/v/++u7v/u7i4/7i1
        tP+1srH/tbKx/8PAv/9SUVH/xMPC/+jm5v/W1NP/uba1/6WhoP9MSkr/p6Wl/+/t7P/m5eT/zcvK/7Wy
        sf+0sbD/tbKx/7Wysf+2s7L/t7Sz/7e0tP+9urr/nJqZ+gICAistLCw6vby76NbU0//Pzs3/zMrJ/8rI
        x//HxMP/w8HA/767uv+6trX/vru6/3p5eP98e3v/7+3s/9/e3f/Cv73/q6im/398e/93dnb/7+7t/8XD
        wv+2s7L/t7Wz/7m2tf+5trX/uba1/7q3tv+6uLf/u7m4/8G+vv+fnZz6AgICKy4tLTrDwsHo3tzb/9fV
        1f/V09P/1NLR/9LQz//Pzcz/y8nI/8bEw//DwcD/sq+u/01MTP/Pzcz/6Ofl/8vJx/+ppqT/yMbF/1dW
        Vv+7uLf/ure1/7q3tf+7uLb/vLm3/7y6uP+8ubj/vbu6/768u/++vLz/xMLB/6Gfn/oCAgIrLy4uOsjH
        xujj4uH/3dzc/9zb2//c2tr/29nY/9nY1//X1dT/2dfW/87My//b2dj/aWhn/5KRj//X1dP/1dTS/7y6
        uP/i4N//ZWRj/4qIh//Fw8H/vbq5/768uv+/vLv/v728/8C+vf/Avr7/wb++/8LAv//HxcT/pKKh+gIC
        AisvLy86ysnJ6Obl5P/h4N//4eDf/+Df3//g397/4N/e/+Ti4f+enZz/U1JS/7Oysv+9u7r/ZmZl/9za
        2f/Pzcz/yMbE/8TCwP+dm5n/XFxb/8rIxv/Bvr3/wb++/8LAv//DwcD/xMLA/8TCwf/Fw8L/xsPC/8vJ
        yP+mpaT6AgICKy8vLzrLysro5+bm/+Lh4P/i4OD/4uHg/+Lh4P/h4N//5eTj/2JiYv+fn57/aGhn/7S0
        s/9hYWD/rq2r/8/Ny//KyMf/tbOx/7azsf9QT0//s7Gv/8XDwf/DwcD/xcPB/8bEwv/GxMP/x8bF/8jG
        xf/IxsX/zcvL/6inpvoCAgIrLy8vOsrJyejm5eT/4N/f/+Df3v/g397/397d/93c2//e3dz/wcC//2Vl
        ZP+1tLP/WlpZ/1JRUf9+fX3/29rY/87Myv/V1NP/vbu4/2hmZf+Eg4H/xcPB/8G/vf/DwcD/xMPB/8bE
        w//IxsX/yMbF/8jGxv/NzMv/qKem+gICAisvLy86x8bG6OPi4f/d3Nz/3Nva/9va2f/a2dj/1tXU/9HQ
        z//U09H/n56c/1xbW/+npaT/V1dW/21tbP/S0c7/0M/O/9zb2v/m5eT/kI6N/2xsav/Dwb//vby6/7++
        vf/CwL//xMLB/8bEw//GxcT/x8XF/8zKyf+npaX6AgICKy4tLTrDwsLo3t3c/9jX1//W1dT/1NPS/9PS
        0f/Pzs3/ycjH/8PBwP/FxML/m5qZ/19eXv/Ew8P/4eHg/9TT0f/f3t3/zMrJ//v7+v+np6b/dXRz/8fF
        xP+/vr3/v769/8C/vv/CwMD/w8LB/8TCwf/Ew8L/ycfG/6WjovoCAgIrLSwsOr69vOjX1tX/0tHQ/9DP
        zv/NzMz/zMvK/8nIx//FxMP/wsHA/8bFxP/e3d3/zc3M/2NjY/9ycnL/urq5/+Pi4f/Ozcz/3dzb/3d3
        dv+5ubj/0dDP/8PCwf/DwsH/w8HB/8LAwP/BwL//wsDA/8HAv//GxcT/oqGg+gICAissKys6ubi36NDP
        zv/Mysr/ysnI/8jHxv/GxcT/xsbF/8fGxv/NzMv/2tna/+rp6f/5+fn/6Ojn/4+Pjv9lZWX/aWlp/2Ji
        Yf9SUlH/lZWV//b29v/r6ur/0dDP/8jHxv/FxMP/xMPC/8LBwP/Av77/v728/8TCwv+fnZ36AgICKyoq
        KjqzsrHoycfH/8XDwv/Fw8L/xMPC/8TDwv/Ix8b/0NDP/93d3P/q6en/8/Pz//Tz8//g4OD/1NPT//Ly
        8f/Gxsb/RUVE/1ZWVv9lZWX/WVlZ/8DAwP/t7e3/1dTU/8rJyP/FxMP/w8HB/8G/v/++vbz/wsC//5ya
        mvoCAgIrKSgoOq6srOjEwsH/wL69/8G/vv/DwcH/x8fG/8/Pzv/c3Nv/6eno//Ly8v/39/b/7+/v/9ra
        2f/U1NP/39/f/1VVVf+goJ//2djY/+fn5//Hx8f/VVVV/87Nzf/q6en/1tXV/8rJyP/DwsH/wL++/7+9
        vf/Bv77/m5qZ+gICAisoJyc6qKam6MC+vf+8u7r/v769/8XEw//Pzs7/2trZ/+Xl5f/v7+//9vX1//X1
        9f/o6Oj/19fX/97e3f+zs7P/bGxs//T09P/V1dX/29ra//z7+/+urq7/f39///j4+P/i4eH/1dTU/8jH
        x//Bv7//vbu7/769vP+amJj6AgICKycnJjqlo6LovLq5/7y7uv/CwcD/zMvK/9jX1//j4uL/7Ozr//Py
        8v/19fb/8O/v/+Hh4f/V1dX/4ODg/7e3t/9ycnL/9/j4/9jY1//U1NT/6eno/87Ozv9vb2//+fj4/+vq
        6v/g39//09LR/8fGxv+8u7r/vLu6/5mXl/oCAgIrJiUlOqKgn+i7ubj/v729/8nIyP/U09L/397e/+no
        6P/w7+//9PTz//Pz8//o5+f/2tnZ/9HQ0P/b29v/5+bm/1VVVf/Ozs7/5+fn/9PT0//p6ej/paWl/3Z1
        df/8/Pz/7+7u/+fn5v/d3Nz/0M/P/8PCwf++vLz/l5aV+gICAismJSU6oqGg6L69vP/Ew8L/0M7O/9ra
        2f/k4+P/7Ovr//Hw8P/z8/P/7e3t/9/e3v/T0tL/zczM/9jY2P/5+fn/u7u7/1NTU/+ioaH/ubi4/6Cg
        oP9LS0v/u7u6//n4+P/x8PD/7Ovr/+Pi4v/Y19b/zMvK/8XEw/+ZmJj6AQEBKyYmJjulo6Lpw8LC/8vK
        yf/W1NT/39/e/+jn5//t7e3/8fDw/+/v7//k5OT/19bW/8zLy//JyMj/2NfX/+/v7//8/Pz/xsbG/3Fw
        cP9cW1v/YWBg/6yrq//s6+v/7u3t//Dw8P/t7ez/5+fm/9/e3v/U09P/zs3M/6CfnvsBAQEsJycnN7Cv
        ru3My8r/1NLS/93d3P/m5eT/7Ozs//Hx8f/z8vL/7Ovr/97c3P/Qz8//xsTE/8XExP/Z19f/8fHx//T0
        9P/v7u7/4+Li/87Nzf/Mysr/1dTU/9/e3v/q6en/8O/v//Dw7//t7Oz/5+bm/97d3f/Z2Nf/qKem/wEB
        ASUKCgoKcXFxgcnIyOvLysnw0tHR8NfX1/Dc3Nvw3t7e8N3c3PDU09PwyMfH8L68vPC2tbXwuLe38MrJ
        yfDe3d3w4ODg8NjX1/DLysrwvr288La0tPC6ubnwx8bG8NLS0fDa2tnw3d3c8N3b3PDZ2Njw09LS8NHQ
        0O1paGiWAAAABAAAAAAKCgoHOzs7QD09PUY+Pj5GPz8/RkBAQEZAQEBGPz8/Rj09PUY7OztGOTg4Rjg3
        N0Y4ODhGPDw8RkBAQEZBQUFGPz8/Rjw8PEY6OTlGNzc3Rjg4N0Y6OjpGPT09Rj8/P0ZAQEBGQEBARj8/
        P0Y/Pz5GPDw8QwsLCw0AAAAAwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAE=
</value>
  </data>
</root>